<Window x:Class="PaintBetter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PaintBetter"
        mc:Ignorable="d"
        Title="PaintBetter" Height="600" Width="800"
        WindowState="Maximized"
        Background="{DynamicResource ThemeWindowBackgroundBrush}" 
        Foreground="{DynamicResource ThemeForegroundBrush}"
        Loaded="MainWindow_Loaded"
        SizeChanged="MainWindow_SizeChanged">
    <Grid>
        <!-- Main Content Area -->
        <DockPanel x:Name="MainContentPanel">
            <ToolBarTray x:Name="MainToolBarTray" DockPanel.Dock="Top" Background="{DynamicResource ThemeControlBackgroundBrush}">
                <ToolBar>
                    <Button x:Name="FileButton" Content="File" Click="FileButton_Click"/>
                    <Separator/>
                    <Button Content="Pencil" />
                    <Button Content="Eraser" />
                    <Separator />
                    <Button Content="Color" />
                    <Separator />
                    <Label Content="Width:"/>
                    <TextBox x:Name="WidthTextBox" Width="50" />
                    <Label Content="Height:"/>
                    <TextBox x:Name="HeightTextBox" Width="50" />
                    <Button x:Name="ResizeButton" Content="Set Size" Click="ResizeButton_Click"/>
                </ToolBar>
            </ToolBarTray>

            <StatusBar x:Name="MainStatusBar" DockPanel.Dock="Bottom" Background="{DynamicResource ThemeControlBackgroundBrush}">
                <StatusBarItem>
                    <TextBlock x:Name="FileNameText" Text="Untitled" />
                </StatusBarItem>
                <Separator/>
                <StatusBarItem>
                    <TextBlock x:Name="CoordinatesText" Text="X: 0, Y: 0" />
                </StatusBarItem>
            </StatusBar>

            <!-- ScrollViewer handles panning/zooming input -->
            <ScrollViewer x:Name="CanvasScrollViewer" 
                          HorizontalScrollBarVisibility="Auto" 
                          VerticalScrollBarVisibility="Auto" 
                          Background="{DynamicResource ThemeWindowBackgroundBrush}"
                          PreviewMouseWheel="CanvasScrollViewer_PreviewMouseWheel"
                          PreviewMouseDown="CanvasScrollViewer_PreviewMouseDown"
                          PreviewMouseUp="CanvasScrollViewer_PreviewMouseUp"
                          MouseMove="CanvasScrollViewer_MouseMove">
                <!-- Canvas panel allows explicit positioning of its children -->
                <!-- Bind Panel size to ScrollViewer size to allow centering calculation -->
                <Canvas x:Name="CanvasContainerPanel" 
                        Width="{Binding ActualWidth, ElementName=CanvasScrollViewer, Mode=OneWay}"
                        Height="{Binding ActualHeight, ElementName=CanvasScrollViewer, Mode=OneWay}"
                        Background="Transparent"> <!-- Background for hit-testing -->
                     <!-- CanvasBorder sits inside the Canvas, positioned by Canvas.Left/Top -->
                    <Border x:Name="CanvasBorder"
                            Width="800" Height="600"
                            BorderBrush="{DynamicResource ThemeBorderBrush}" BorderThickness="1" 
                            Canvas.Left="0" Canvas.Top="0"> <!-- Initial position -->
                        <Border.LayoutTransform>
                            <ScaleTransform x:Name="CanvasScaleTransform" ScaleX="1" ScaleY="1"/>
                        </Border.LayoutTransform>
                         <!-- Canvas fills the border, keep background White -->
                        <InkCanvas x:Name="DrawingCanvas" Background="White" MouseMove="DrawingCanvas_MouseMove"/>
                    </Border>
                 </Canvas>
            </ScrollViewer>
        </DockPanel>

        <!-- File Side Panel (Initially Offscreen) -->
        <Border x:Name="FilePanel"
                Width="250"
                HorizontalAlignment="Left"
                Background="{DynamicResource ThemeControlBackgroundBrush}"
                BorderBrush="{DynamicResource ThemeBorderBrush}"
                BorderThickness="0,0,1,0">
            <Border.RenderTransform>
                <TranslateTransform x:Name="FilePanelTranslateTransform" X="-250"/>
            </Border.RenderTransform>
            <DockPanel Margin="10">
                 <Button x:Name="CloseFilePanelButton" DockPanel.Dock="Bottom" Content="Close" Margin="0,10,0,0" Click="CloseFilePanelButton_Click" HorizontalAlignment="Stretch"/>
                 <Button x:Name="FilePanelQuitButton" DockPanel.Dock="Bottom" Content="Quit" Margin="0,5,0,0" Click="FilePanelQuitButton_Click" HorizontalAlignment="Stretch"/>
               
                 <!-- Settings Section -->
                 <StackPanel DockPanel.Dock="Bottom" Margin="0,20,0,0">
                     <Label Content="Settings" FontWeight="SemiBold" Padding="0,0,0,5"/>
                     <RadioButton x:Name="LightThemeRadio" Content="Light Theme" GroupName="Theme" Click="FilePanelSettingsThemeButton_Click" IsChecked="True"/>
                     <RadioButton x:Name="DarkThemeRadio" Content="Dark Theme" GroupName="Theme" Click="FilePanelSettingsThemeButton_Click"/>
                 </StackPanel>

                 <!-- Top Section (Save) -->
                 <Button x:Name="FilePanelSaveButton" Content="Save" Height="50" FontSize="16" Margin="0,0,0,10" VerticalAlignment="Top" HorizontalAlignment="Stretch" /> 
                 <!-- Add other File operations here eventually -->
            </DockPanel>
        </Border>
    </Grid>
</Window> 